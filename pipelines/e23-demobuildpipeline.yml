# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
   include:
     - main
  paths:
    exclude:
      - bicep


stages:
- stage: 'Build'
  displayName: 'Génération, exécution des test et publication'
  pool:
   vmImage: ubuntu-latest  
  variables:
    buildConfiguration: 'Release'
  jobs:
   - job : 'Build'
     steps:
     - task: DotNetCoreCLI@2
       inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'
       displayName: 'Restaurer les packages NuGet'

     - task: DotNetCoreCLI@2
       inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
       displayName: 'Génération de la solution'

     - task: DotNetCoreCLI@2
       inputs:
        command: 'test'
        projects: '**/*Tests.csproj'
        arguments: '--configuration $(buildConfiguration)'
       displayName: 'Exécution des tests unitaires'
  
     - task: DotNetCoreCLI@2
       inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
       displayName: 'Publication du projet'

     - task: PublishBuildArtifacts@1
       inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
       displayName: 'Publication dans Azure Pipeline'
  
- stage: 'DeployToDev'
  displayName: 'Déploiment en dev'
  dependsOn: 'Build'
  pool:
   vmImage: ubuntu-latest  
  jobs:
   - deployment : 'DeployToDev'
     environment: 'Dev'
     strategy:
      runOnce:
        deploy:
         steps:
         - task: DownloadBuildArtifacts@1
           inputs:
             buildType: 'current'
             downloadType: 'single'
             artifactName: 'drop'
             downloadPath: '$(System.ArtifactsDirectory)'
           displayName: 'Téléchargement du package'
        
         - task: AzureWebApp@1
           inputs:
            azureSubscription: 'sc-demo-devops'
            appType: 'webApp'
            appName: 'webapp-demo-devops'
            package: '$(System.ArtifactsDirectory)/**/*.zip'
            deploymentMethod: 'auto'
           displayName: 'Déploiement de application'
        
- stage: 'DeployToProd'
  displayName: 'Déploiment en prod'
  dependsOn: 'DeployToDev'
  pool:
   vmImage: ubuntu-latest  
  jobs:
   - deployment : 'DeployToProd'
     environment: 'Prod'
     strategy:
      runOnce:
        deploy:
         steps:
         - task: DownloadBuildArtifacts@1
           inputs:
             buildType: 'current'
             downloadType: 'single'
             artifactName: 'drop'
             downloadPath: '$(System.ArtifactsDirectory)'
           displayName: 'Téléchargement du package'
        
         - task: AzureWebApp@1
           inputs:
            azureSubscription: 'sc-demo-devops'
            appType: 'webApp'
            appName: 'webapp-demo-devops-prod'
            package: '$(System.ArtifactsDirectory)/**/*.zip'
            deploymentMethod: 'auto'
           displayName: 'Déploiement de application'      